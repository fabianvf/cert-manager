Script started on Thu Mar 17 18:01:45 2022
[oh-my-zsh] plugin 'copypath' not found
[33mThe `osx` plugin is deprecated and has been renamed to `macos`.
Please update your .zshrc to use the `[1m[33mmacos[0m[33m` plugin instead.[39m
[1m[7m%[27m[1m[0m                                                                                                                                       ]2;vnarsing@vnarsing-mac:~/go/src/github.com/cert-manager]1;../cert-manager[0m[27m[24m[J[01;32mâžœ  [36mcert-manager[00m [01;34mgit:([31mscope-cert-req[34m) [33mâœ—[00m [K[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                       ]2;vnarsing@vnarsing-mac:~/go/src/github.com/cert-manager]1;../cert-manager[0m[27m[24m[J[01;32mâžœ  [36mcert-manager[00m [01;34mgit:([31mscope-cert-req[34m) [33mâœ—[00m [K[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                       ]2;vnarsing@vnarsing-mac:~/go/src/github.com/cert-manager]1;../cert-manager[0m[27m[24m[J[01;32mâžœ  [36mcert-manager[00m [01;34mgit:([31mscope-cert-req[34m) [33mâœ—[00m [K[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                                       ]2;vnarsing@vnarsing-mac:~/go/src/github.com/cert-manager]1;../cert-manager[0m[27m[24m[J[01;32mâžœ  [36mcert-manager[00m [01;34mgit:([31mscope-cert-req[34m) [33mâœ—[00m [K[?1h=[?2004hg[90mit push -f origin scope-cert-req [39m[33Dg[39mo[90m [90mr[90mu[90mn[90m [90mc[90mm[90md[90m/[90mc[90mo[90mn[90mt[90mr[90mo[90ml[90ml[90me[90mr[90m/[90mm[90ma[90mi[90mn[90m.[90mg[90mo[90m [90m-[90m-[90mk[90mu[90mbeconfig /Users/vnarsing/go/src/github.com/kcp-dev/kcp/.kcp/ad[90mm[90min.kubeconfig --v=9 --leader-elect=false [39m[K[A[39m [39mr[39mu[39mn[39m [39mc[39mm[39md[39m/[39mc[39mo[39mn[39mt[39mr[39mo[39ml[39ml[39me[39mr[39m/[39mm[39ma[39mi[39mn[39m.[39mg[39mo[39m [39m-[39m-[39mk[39mu[39mb[39me[39mc[39mo[39mn[39mf[39mi[39mg[39m [39m/[39mU[39ms[39me[39mr[39ms[39m/[39mv[39mn[39ma[39mr[39ms[39mi[39mn[39mg[39m/[39mg[39mo[39m/[39ms[39mr[39mc[39m/[39mg[39mi[39mt[39mh[39mu[39mb[39m.[39mc[39mo[39mm[39m/[39mk[39mc[39mp[39m-[39md[39me[39mv[39m/[39mk[39mc[39mp[39m/[39m.[39mk[39mc[39mp[39m/[39ma[39mdm[39mi[39mn[39m.[39mk[39mu[39mb[39me[39mc[39mo[39mn[39mf[39mi[39mg[39m [39m-[39m-[39mv[39m=[39m9[39m [39m-[39m-[39ml[39me[39ma[39md[39me[39mr[39m-[39me[39ml[39me[39mc[39mt[39m=[39mf[39ma[39ml[39ms[39me[39m [?1l>[?2004l
]2;go run cmd/controller/main.go --kubeconfig  --v=9 --leader-elect=false]1;go# github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/venafi
pkg/controller/certificatesigningrequests/venafi/venafi.go:120:40: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
pkg/controller/certificatesigningrequests/venafi/venafi.go:131:39: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
pkg/controller/certificatesigningrequests/venafi/venafi.go:151:41: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
pkg/controller/certificatesigningrequests/venafi/venafi.go:159:41: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
pkg/controller/certificatesigningrequests/venafi/venafi.go:201:39: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
pkg/controller/certificatesigningrequests/venafi/venafi.go:206:37: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, string, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
# github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/vault
pkg/controller/certificatesigningrequests/vault/vault.go:98:37: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
pkg/controller/certificatesigningrequests/vault/vault.go:115:37: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
pkg/controller/certificatesigningrequests/vault/vault.go:125:37: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
pkg/controller/certificatesigningrequests/vault/vault.go:132:37: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, string, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
# github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/acme
pkg/controller/certificatesigningrequests/acme/acme.go:111:42: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
pkg/controller/certificatesigningrequests/acme/acme.go:124:42: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
pkg/controller/certificatesigningrequests/acme/acme.go:136:42: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
pkg/controller/certificatesigningrequests/acme/acme.go:181:42: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
pkg/controller/certificatesigningrequests/acme/acme.go:222:41: not enough arguments in call to "github.com/cert-manager/cert-manager/pkg/controller/certificatesigningrequests/util".UpdateOrApplyStatus
	have (context.Context, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, string, string)
	want (context.Context, kubernetes.Interface, "k8s.io/client-go/kubernetes/typed/certificates/v1".CertificateSigningRequestInterface, *"k8s.io/api/certificates/v1".CertificateSigningRequest, "k8s.io/api/certificates/v1".RequestConditionType, string)
[1m[7m%[27m[1m[0m                                                                                                                                       ]2;vnarsing@vnarsing-mac:~/go/src/github.com/cert-manager]1;../cert-manager[0m[27m[24m[J[01;31mâžœ  [36mcert-manager[00m [01;34mgit:([31mscope-cert-req[34m) [33mâœ—[00m [K[?1h=[?2004hc[90mode .[39mc[39mi[39m [39m [39m [39m de   c[90mo[90mde .[39mc[39mo[39md[39me[39m [39m.[?1l>[?2004l
]2;code .]1;code[1m[7m%[27m[1m[0m                                                                                                                                       ]2;vnarsing@vnarsing-mac:~/go/src/github.com/cert-manager]1;../cert-manager[0m[27m[24m[J[01;32mâžœ  [36mcert-manager[00m [01;34mgit:([31mscope-cert-req[34m) [33mâœ—[00m [K[?1h=[?2004hg[90mo run cmd/controller/main.go --kubeconfig /Users/vnarsing/go/src/github.com/kcp-dev/kcp/.kcp/ad[90mm[90min.kubeconfig --v=9 --leader-elect=false [39m[K[Ag[39mo[39m [39mr[39mu[39mn[39m [39mc[39mm[39md[39m/[39mc[39mo[39mn[39mt[39mr[39mo[39ml[39ml[39me[39mr[39m/[39mm[39ma[39mi[39mn[39m.[39mg[39mo[39m [39m-[39m-[39mk[39mu[39mb[39me[39mc[39mo[39mn[39mf[39mi[39mg[39m [39m/[39mU[39ms[39me[39mr[39ms[39m/[39mv[39mn[39ma[39mr[39ms[39mi[39mn[39mg[39m/[39mg[39mo[39m/[39ms[39mr[39mc[39m/[39mg[39mi[39mt[39mh[39mu[39mb[39m.[39mc[39mo[39mm[39m/[39mk[39mc[39mp[39m-[39md[39me[39mv[39m/[39mk[39mc[39mp[39m/[39m.[39mk[39mc[39mp[39m/[39ma[39mdm[39mi[39mn[39m.[39mk[39mu[39mb[39me[39mc[39mo[39mn[39mf[39mi[39mg[39m [39m-[39m-[39mv[39m=[39m9[39m [39m-[39m-[39ml[39me[39ma[39md[39me[39mr[39m-[39me[39ml[39me[39mc[39mt[39m=[39mf[39ma[39ml[39ms[39me[39m [?1l>[?2004l
]2;go run cmd/controller/main.go --kubeconfig  --v=9 --leader-elect=false]1;goI0317 18:10:34.146484   48225 start.go:75] cert-manager "msg"="starting controller"  "git-commit"="" "version"="canary"
I0317 18:10:34.146749   48225 controller.go:244] cert-manager/controller/build-context "msg"="configured acme dns01 nameservers" "nameservers"=["[2600:1700:43b0:ad90::1]:53","192.168.1.254:53"] 
I0317 18:10:34.151823   48225 loader.go:372] Config loaded from file:  /Users/vnarsing/go/src/github.com/kcp-dev/kcp/.kcp/admin.kubeconfig
I0317 18:10:34.152464   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.152582   48225 controller.go:72] cert-manager/controller "msg"="enabled controllers: [certificaterequests-approver certificaterequests-issuer-acme certificaterequests-issuer-ca certificaterequests-issuer-selfsigned certificaterequests-issuer-vault certificaterequests-issuer-venafi certificates-issuing certificates-key-manager certificates-metrics certificates-readiness certificates-request-manager certificates-revision-manager certificates-trigger challenges clusterissuers ingress-shim issuers orders]"  
I0317 18:10:34.152812   48225 controller.go:184] cert-manager/controller "msg"="not starting controller as it's disabled" "controller"="gateway-shim" 
I0317 18:10:34.152937   48225 controller.go:93] cert-manager/controller "msg"="starting metrics server"  "address"={"IP":"::","Port":9402,"Zone":""}
I0317 18:10:34.153002   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.153137   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="certificates-metrics" 
I0317 18:10:34.153157   48225 controller.go:102] cert-manager/certificates-metrics "msg"="starting control loop"  
I0317 18:10:34.153241   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.153378   48225 controller.go:184] cert-manager/controller "msg"="not starting controller as it's disabled" "controller"="certificatesigningrequests-issuer-acme" 
I0317 18:10:34.153392   48225 controller.go:184] cert-manager/controller "msg"="not starting controller as it's disabled" "controller"="certificatesigningrequests-issuer-ca" 
I0317 18:10:34.153405   48225 controller.go:184] cert-manager/controller "msg"="not starting controller as it's disabled" "controller"="certificatesigningrequests-issuer-selfsigned" 
I0317 18:10:34.153409   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="certificates-issuing" 
I0317 18:10:34.153424   48225 controller.go:102] cert-manager/certificates-issuing "msg"="starting control loop"  
I0317 18:10:34.153532   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.153709   48225 controller.go:193] cert-manager/controller/certificaterequests-issuer-acme "msg"="new certificate request controller registered"  "type"="acme"
I0317 18:10:34.153765   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="certificaterequests-issuer-acme" 
I0317 18:10:34.153782   48225 controller.go:102] cert-manager/certificaterequests-issuer-acme "msg"="starting control loop"  
I0317 18:10:34.153895   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.153973   48225 controller.go:193] cert-manager/controller/certificaterequests-issuer-ca "msg"="new certificate request controller registered"  "type"="ca"
I0317 18:10:34.154036   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="certificaterequests-issuer-ca" 
I0317 18:10:34.157748   48225 controller.go:102] cert-manager/certificaterequests-issuer-ca "msg"="starting control loop"  
I0317 18:10:34.154168   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.158018   48225 controller.go:193] cert-manager/controller/certificaterequests-issuer-vault "msg"="new certificate request controller registered"  "type"="vault"
I0317 18:10:34.158058   48225 controller.go:184] cert-manager/controller "msg"="not starting controller as it's disabled" "controller"="certificatesigningrequests-issuer-venafi" 
I0317 18:10:34.158227   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="certificaterequests-issuer-vault" 
I0317 18:10:34.158242   48225 controller.go:102] cert-manager/certificaterequests-issuer-vault "msg"="starting control loop"  
I0317 18:10:34.158374   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.158580   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="issuers" 
I0317 18:10:34.158600   48225 controller.go:102] cert-manager/issuers "msg"="starting control loop"  
I0317 18:10:34.158730   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.158908   48225 round_trippers.go:466] curl -v -XGET  -H "Accept: application/json, */*" -H "User-Agent: cert-manager-ingress-shim/canary (darwin/amd64) cert-manager/" -H "Authorization: Bearer <masked>" 'https://192.168.1.70:6443/clusters/%2A/apis/networking.k8s.io/v1'
I0317 18:10:34.159385   48225 round_trippers.go:510] HTTP Trace: Dial to tcp:192.168.1.70:6443 succeed
I0317 18:10:34.165059   48225 round_trippers.go:570] HTTP Statistics: DNSLookup 0 ms Dial 0 ms TLSHandshake 3 ms ServerProcessing 2 ms Duration 6 ms
I0317 18:10:34.165078   48225 round_trippers.go:577] Response Headers:
I0317 18:10:34.165087   48225 round_trippers.go:580]     Audit-Id: 8699d8f7-4518-4301-8719-f1d0502dfee8
I0317 18:10:34.165110   48225 round_trippers.go:580]     Cache-Control: no-cache, private
I0317 18:10:34.165126   48225 round_trippers.go:580]     Content-Type: application/json
I0317 18:10:34.165134   48225 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 
I0317 18:10:34.165140   48225 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 
I0317 18:10:34.165147   48225 round_trippers.go:580]     Content-Length: 434
I0317 18:10:34.165154   48225 round_trippers.go:580]     Date: Fri, 18 Mar 2022 01:10:34 GMT
I0317 18:10:34.165191   48225 request.go:1250] Response Body: {"kind":"APIResourceList","apiVersion":"v1","groupVersion":"networking.k8s.io/v1","resources":[{"name":"ingresses","singularName":"ingress","namespaced":true,"kind":"Ingress","verbs":["delete","deletecollection","get","list","patch","create","update","watch"],"shortNames":["ing"],"storageVersionHash":"7vnWacqP60Y="},{"name":"ingresses/status","singularName":"","namespaced":true,"kind":"Ingress","verbs":["get","patch","update"]}]}
I0317 18:10:34.165501   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="ingress-shim" 
I0317 18:10:34.165518   48225 controller.go:102] cert-manager/ingress-shim "msg"="starting control loop"  
I0317 18:10:34.165691   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.165923   48225 controller.go:193] cert-manager/controller/certificaterequests-issuer-venafi "msg"="new certificate request controller registered"  "type"="venafi"
I0317 18:10:34.165990   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="certificaterequests-issuer-venafi" 
I0317 18:10:34.166007   48225 controller.go:102] cert-manager/certificaterequests-issuer-venafi "msg"="starting control loop"  
I0317 18:10:34.166209   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.166652   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="certificates-key-manager" 
I0317 18:10:34.175481   48225 controller.go:102] cert-manager/certificates-key-manager "msg"="starting control loop"  
I0317 18:10:34.166777   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.175747   48225 controller.go:193] cert-manager/controller/certificaterequests-issuer-selfsigned "msg"="new certificate request controller registered"  "type"="selfsigned"
I0317 18:10:34.175967   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="certificaterequests-issuer-selfsigned" 
I0317 18:10:34.175987   48225 controller.go:102] cert-manager/certificaterequests-issuer-selfsigned "msg"="starting control loop"  
I0317 18:10:34.176559   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.177111   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.177167   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="certificates-readiness" 
I0317 18:10:34.177199   48225 controller.go:102] cert-manager/certificates-readiness "msg"="starting control loop"  
I0317 18:10:34.177279   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="certificates-request-manager" 
I0317 18:10:34.177299   48225 controller.go:102] cert-manager/certificates-request-manager "msg"="starting control loop"  
I0317 18:10:34.177539   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.177894   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="certificates-revision-manager" 
I0317 18:10:34.177916   48225 controller.go:102] cert-manager/certificates-revision-manager "msg"="starting control loop"  
I0317 18:10:34.178039   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.178234   48225 controller.go:207] cert-manager/controller "msg"="starting controller" "controller"="certificates-trigger" 
I0317 18:10:34.178250   48225 controller.go:102] cert-manager/certificates-trigger "msg"="starting control loop"  
I0317 18:10:34.178337   48225 context.go:298] cert-manager/controller "msg"="creating event broadcaster"  
I0317 18:10:34.178607   48225 reflector.go:219] Starting reflector *v1.Secret (5m0s) from k8s.io/client-go@v0.0.0-20220311170911-10415751c5a9/tools/cache/reflector.go:167
I0317 18:10:34.178621   48225 reflector.go:255] Listing and watching *v1.Secret from k8s.io/client-go@v0.0.0-20220311170911-10415751c5a9/tools/cache/reflector.go:167
I0317 18:10:34.178766   48225 round_trippers.go:466] curl -v -XGET  -H "Accept: application/json, */*" -H "User-Agent: cert-manager-challenges/canary (darwin/amd64) cert-manager/" -H "Authorization: Bearer <masked>" 'https://192.168.1.70:6443/api/v1/secrets?limit=500&resourceVersion=0'
I0317 18:10:34.189765   48225 round_trippers.go:570] HTTP Statistics: GetConnection 0 ms ServerProcessing 1 ms Duration 2 ms
I0317 18:10:34.189783   48225 round_trippers.go:577] Response Headers:
I0317 18:10:34.189792   48225 round_trippers.go:580]     Content-Type: application/json
I0317 18:10:34.189800   48225 round_trippers.go:580]     X-Kubernetes-Pf-Flowschema-Uid: 
I0317 18:10:34.189808   48225 round_trippers.go:580]     X-Kubernetes-Pf-Prioritylevel-Uid: 
I0317 18:10:34.189816   48225 round_trippers.go:580]     Date: Fri, 18 Mar 2022 01:10:34 GMT
I0317 18:10:34.189822   48225 round_trippers.go:580]     Audit-Id: 6849d081-3246-47d3-85ee-9e4e43cd9b9e
I0317 18:10:34.189828   48225 round_trippers.go:580]     Cache-Control: no-cache, private
I0317 18:10:34.189978   48225 request.go:1250] Response Body: {"kind":"SecretList","apiVersion":"v1","metadata":{"resourceVersion":"37264"},"items":[{"metadata":{"name":"default-token-lchwp","namespace":"kube-public","uid":"a1a3a4a9-fd88-487f-a56d-e8f6bfe603ae","resourceVersion":"183","creationTimestamp":"2022-03-17T17:36:00Z","annotations":{"kubernetes.io/service-account.name":"default","kubernetes.io/service-account.uid":"e7294954-14d1-493d-9151-f19eee9a9747"},"clusterName":"system:admin","managedFields":[{"manager":"kcp","operation":"Update","apiVersion":"v1","time":"2022-03-17T17:36:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca.crt":{},"f:namespace":{},"f:token":{}},"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/service-account.name":{},"f:kubernetes.io/service-account.uid":{}}},"f:type":{}}}]},"data":{"ca.crt":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREF5TVRBd0xnWURWUVFERENkaGNHbHoKWlhKMlpYSXRiRzl2Y0dKaFkyc3RZMnhwWlc1MExXTmhRREUyTkRjMU16ZzFOVE13SGhjTk1qSXdNekUzTVRZegpOVFV6V2hjTk1qTXdNekUzTVRZek5UVXpXakF2TVMwd0t3WURWUVFERENSaGNHbHpaWEoyWlhJdGJHOXZjR0poClkyc3RZMnhwWlc1MFFERTJORGMxTXpnMU5UTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREJWRFJLQThrWGp3QlQ2bmtqSHNQWmZJUGRHTk80YW1IRWhLaFZIMmZza0UzcGpOUUxTUUtGNHI2SgpzdENYcXdoK21CajQ2K3JWT0xNdmFrL3IrSjlGUGhGRExUakRwd0JSLzMzZExqei9BSWJKclZxQjZ3Tnc0dnpXCjIwc3hvQTBycWp6eEFuSStwQkxlVTlWZ3BKV2hySW1UZ3NiQnBZNW1VZlpxT0hJRjdibzRaOXRVWlBCRmRBRlIKVDVERUJicEFrTDRkYWtCL0RJTy9IZDk5dklHSnNmYk03T1MwbG5NMlVCRWRDb24wNlZiajFjYXdtNlpOdU1LSgpnWk1mNW1UbHZxc0VPaWVwc1FLVFA2bm5CM2ZiMVFSZkZyWVQ4bHRXd0I3RUcwTm8vSTAvR3ladjJid2M3OWJRCjBvYUZ0MS8zUUdycjRVMkEwcUZpMnBtSndiRDFBZ01CQUFHamZEQjZNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVQKQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkZ2TgpqUUYwc2JxcmdDUDQ0aHo0WWxKN1JkaDVNQ1FHQTFVZEVRUWRNQnVDR1dGd2FYTmxjblpsY2kxc2IyOXdZbUZqCmF5MWpiR2xsYm5Rd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJaHN0cFJQZWpRcm5LRzZMc0RxUFRLUlJ0ejUKVHBzOVplSkdKMW8vYklsYUxYcHdQaHpaTlJCTUQvQWMyeHc3b2pDZS9oOERsNVVrTEtqNTBlWG9La1g3TmxZRgpwQ0NIOE1WUC9hWjVIQXhETHBqdnEzbHArM1Z6SEhFL1VQWWcxcVg2aHpieGFxSU9RMnpybzRESEU5YjEwM2ZsCmEzdHIvb1E1azNaSUdLalFqY1VXNVFxRUxOaUhueEU3SDh4K2RxODd1MXRQcjFJcXV1czlCZCtrMEJINzgwWWkKT3JiT05KZFp4UEpYU3h2NnFydkxRL1NQdmoxcTBHT2ZhRHZ6RHIxMGQ1eURxai9LYkpnR210V0hMUVZQVmZTZwphM3loTWlyS3N2L0dETzMwUGlGdjVGS1RnR1JtWXQ4TzJ1RWJ5UWtWVWcyekxQdVdtKys2ZGtYQ3BiTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRElUQ0NBZ21nQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQXlNVEF3TGdZRFZRUUREQ2RoY0dsegpaWEoyWlhJdGJHOXZjR0poWTJzdFkyeHBaVzUwTFdOaFFERTJORGMxTXpnMU5UTXdIaGNOTWpJd016RTNNVFl6Ck5UVXpXaGNOTWpNd016RTNNVFl6TlRVeldqQXlNVEF3TGdZRFZRUUREQ2RoY0dselpYSjJaWEl0Ykc5dmNHSmgKWTJzdFkyeHBaVzUwTFdOaFFERTJORGMxTXpnMU5UTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBdwpnZ0VLQW9JQkFRRFNYTnlaRmZUU1ZzTjlMNEdHbTZSZnV1eEZuR1A3RWRPWWdCZFFVSW04WFZPc0duaFpjMnpTCmE1YWxOZTdxWGlXMk43YVpOY0tBMGc2YnlTWkdUV1hoRS9mbEtjZlFOWEp2WldvVkV6YndwRTJwMFZVY1BkNjAKcjBneFU2QUtvenc2Ky9laFhTWnhKYzVuOXh6bE5RQjRSZDByWVNQUGpReEtOQVVURWppa0Q4UzVPb3hERTk0UwowVm5yeDI0d0x2aUpzKzVhNzVZWS85c3p0MGVnSUpTa3FqVXNrbFBtSTR4WVY4UGQvR1FvTUUvZGtlK3lEemtyCjQ2WldTUi9ubWhqaFYrcEREQVlYL2EvZmVSL3JldU1IazVmZWYvR0h4N1QrZTlaRTRpQlFVNCswRzJtQzZ5V2IKc2grTXIwRGl4blhDcS8zRjNCTXllcTNLSHlHZDZoejlBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQwpwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlJielkwQmRMRzZxNEFqK09JYytHSlNlMFhZCmVUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUF5TGxWR0ZXZGdJcm1JYUVuV0I1bmxHT1hSRUU2aUFqN0xSc08KQUlGSlBkQWg3ZCt0WjdvS1F5c3dsaDNFdXU3WWFzY3lDNitPczRmYndpS3NHMVRBV3Q2dm96YXFTQUZwcFllYwppbnZ1a2JPV0RHU2FPMFhTK0w5RG5najJkd01Ba05VQ3VwamFDK0JsTDZYdkFPV0ZLWW1UZXBOcDJCVlpFcGZQCm4rSWo0L01YL3hJWTBZaUNULzAwOVlQTW5IQ3hGVWptN1FtQ0VTVzdFTXRUL2tnNEw4SlNZNTl2SmRUaURmQ2MKZ2hNMGVwK1VpbE92S0IySzdQR1I1Ymh1UmNvL1VMWTJEd1JiVmV1RVc5ZXFKTldOZVZ1MTlKdmk0VStOdFdIcgpPL1U2dk45MG9xZmFvdU05NmxYWkRlSWdjQ01xTi9wWHRwaysrNmkySEJHOS8zMkcwZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K","namespace":"a3ViZS1wdWJsaWM=","token":"ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklteDVTbXA2Ukc5UU5sOXRjVlZRU0ZOTmVua3dkSEZvVWxsdWVVWXlNVkZaTFdKUlVUTk9TVWhwVlc4aWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOWpiSFZ6ZEdWeVRtRnRaU0k2SW5ONWMzUmxiVHBoWkcxcGJpSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2Ym1GdFpYTndZV05sSWpvaWEzVmlaUzF3ZFdKc2FXTWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObFkzSmxkQzV1WVcxbElqb2laR1ZtWVhWc2RDMTBiMnRsYmkxc1kyaDNjQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1ZFdsa0lqb2laVGN5T1RRNU5UUXRNVFJrTVMwME9UTmtMVGt4TlRFdFpqRTVaV1ZsT1dFNU56UTNJaXdpYzNWaUlqb2ljM2x6ZEdWdE9uTmxjblpwWTJWaFkyTnZkVzUwT210MVltVXRjSFZpYkdsak9tUmxabUYxYkhRaWZRLlc3VFNBOXBqSE9jeFVSOFItQjl1MFVjTHZ4aEUtMWNRRER4LXhMUFJPTTdVbG1Hbk5Xd25jYlNndWFEbHRVZGpNYi1yU3FjVEFyLXZMRXRUZTRPdHF3N1BteDB3ZUZkc1dra1RFQTY1UHhQZzlzc1k5LVp0cWtWZG82RVlHYk1XTl94MFFtOTBlTFlkUUZBbEZwRS1GdEM4NXJSMlFxYVRNUXVEaXlkTVg1YUYxdklkU2VsSU5JeHQzNWlGS3NNbF9RTzJiMkFpODVkZXhJSW5hdmxRRUxnbERXbkI3bFZ3NUdlN3p4VFMxV3pTZ0NoWjBNVEZBS3JjSkVQQkJFLU10Um1sNGJPZUlNVGpOcktjVXlobXVfUWNVWUdDZWJ3OFpVUDR5dnktZ1lpQmdEd1NCc2pMSnVrY3RMTTBDZFdQWW9VbldBRWZYbEJBUEJSZUxGemtIb3JEWm0xSUhPajlmY1hqRXlPclE2WnlxZUozcFR5SERQZjBpWGRLN1FCbUdfUzVQVDhJUURDOFExd1UtUkdLdkl1Zm5ial9zZUp1SGRjRVZVbU1OOFFSOVpCaWVtTGNIa2llN3hwTHNsYVNvcUwtVW5lWVlJcGdSR2JYS0RWRWxic1hGVUFZRGhLTlZ2Vl9tV1lCellia0NPWGRaYV9xZVROOWhqQ3A0WVkxMWVpa3Q2ZENHUGM1dFNkX21RU0RyQk84UWRyV0pxTjNtZDUxRzE2dU5NampKYW03UE9fcmdJWUswWHBfeGxRQ19MVFBUUUJ4UDFRWmhVMWgwQ3gtNVprc2RHdzlYZG1iR1YwbmJMZ0dSN2o5RWM5WFAxbTdwMUJaM1RhbTF2U3BfNm1wME4xUmI1UTkwQnBSaVJNS05wakM1SDhGR0l0NzQ4empsUkNtY2dJ"},"type":"kubernetes.io/service-account-token"},{"metadata":{"name":"default-token-grqkv","namespace":"kube-system","uid":"3948323e-b7b6-429b-960c-fca2025b6c1d","resourceVersion":"184","creationTimestamp":"2022-03-17T17:36:01Z","annotations":{"kubernetes.io/service-account.name":"default","kubernetes.io/service-account.uid":"9ad7bcd7-f885-4042-9451-e6ee1aa14a7c"},"clusterName":"system:admin","managedFields":[{"manager":"kcp","operation":"Update","apiVersion":"v1","time":"2022-03-17T17:36:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:data":{".":{},"f:ca.crt":{},"f:namespace":{},"f:token":{}},"f:metadata":{"f:annotations":{".":{},"f:kubernetes.io/service-account.name":{},"f:kubernetes.io/service-account.uid":{}}},"f:type":{}}}]},"data":{"ca.crt":"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREF5TVRBd0xnWURWUVFERENkaGNHbHoKWlhKMlpYSXRiRzl2Y0dKaFkyc3RZMnhwWlc1MExXTmhRREUyTkRjMU16ZzFOVE13SGhjTk1qSXdNekUzTVRZegpOVFV6V2hjTk1qTXdNekUzTVRZek5UVXpXakF2TVMwd0t3WURWUVFERENSaGNHbHpaWEoyWlhJdGJHOXZjR0poClkyc3RZMnhwWlc1MFFERTJORGMxTXpnMU5UTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREJWRFJLQThrWGp3QlQ2bmtqSHNQWmZJUGRHTk80YW1IRWhLaFZIMmZza0UzcGpOUUxTUUtGNHI2SgpzdENYcXdoK21CajQ2K3JWT0xNdmFrL3IrSjlGUGhGRExUakRwd0JSLzMzZExqei9BSWJKclZxQjZ3Tnc0dnpXCjIwc3hvQTBycWp6eEFuSStwQkxlVTlWZ3BKV2hySW1UZ3NiQnBZNW1VZlpxT0hJRjdibzRaOXRVWlBCRmRBRlIKVDVERUJicEFrTDRkYWtCL0RJTy9IZDk5dklHSnNmYk03T1MwbG5NMlVCRWRDb24wNlZiajFjYXdtNlpOdU1LSgpnWk1mNW1UbHZxc0VPaWVwc1FLVFA2bm5CM2ZiMVFSZkZyWVQ4bHRXd0I3RUcwTm8vSTAvR3ladjJid2M3OWJRCjBvYUZ0MS8zUUdycjRVMkEwcUZpMnBtSndiRDFBZ01CQUFHamZEQjZNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVQKQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkZ2TgpqUUYwc2JxcmdDUDQ0aHo0WWxKN1JkaDVNQ1FHQTFVZEVRUWRNQnVDR1dGd2FYTmxjblpsY2kxc2IyOXdZbUZqCmF5MWpiR2xsYm5Rd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJaHN0cFJQZWpRcm5LRzZMc0RxUFRLUlJ0ejUKVHBzOVplSkdKMW8vYklsYUxYcHdQaHpaTlJCTUQvQWMyeHc3b2pDZS9oOERsNVVrTEtqNTBlWG9La1g3TmxZRgpwQ0NIOE1WUC9hWjVIQXhETHBqdnEzbHArM1Z6SEhFL1VQWWcxcVg2aHpieGFxSU9RMnpybzRESEU5YjEwM2ZsCmEzdHIvb1E1azNaSUdLalF